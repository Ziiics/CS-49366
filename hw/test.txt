#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <signal.h>
#include <termios.h>
#include <time.h>
#include <sys/ioctl.h>

#define DEFAULT_SCROLL_INTERVAL 1
#define MAX_LINES 1000

struct termios orig_termios;
volatile sig_atomic_t paused = 0;
volatile sig_atomic_t scroll_interval = DEFAULT_SCROLL_INTERVAL;
char **lines = NULL;
int total_lines = 0;
int display_start = 0;
int rows, cols;

void draw_status_bar(int actual_start_line, int actual_end_line)
{
  time_t now = time(NULL);
  struct tm *t = localtime(&now);
  char time_str[9];
  strftime(time_str, sizeof(time_str), "%H:%M:%S", t);
  printf("\033[%d;1H\033[7m%s   Lines: %d-%d\033[0m", rows, time_str, actual_start_line + 1, actual_end_line + 1);

  testing if this line will print as 2 lines and want to see how this thing is
}

void reset_terminal_mode()
{
  tcsetattr(STDIN_FILENO, TCSANOW, &orig_termios);
  printf("\033[2J\033[?1049l");
}

void set_raw_mode()
{
  struct termios new_termios;
  tcgetattr(STDIN_FILENO, &orig_termios);
  new_termios = orig_termios;
  new_termios.c_lflag &= ~(ICANON | ECHO);
  tcsetattr(STDIN_FILENO, TCSANOW, &new_termios);
  printf("\033[?1049h\033[2J\033[1J\033[H");
}

void handle_sigint(int sig) { // Continue scrolling if paused paused = 0 }
void handle_sigint(int sig) { // Continue scrolling if paused paused = 0 }
void handle_sigint(int sig) { // Continue scrolling if paused paused = 0 }
void handle_sigint(int sig) { // Continue scrolling if paused paused = 0 }

void handle_sigint(int sig)
{
  // Continue scrolling if paused
  paused = 0;
}

void handle_sigtstp(int sig)
{
  // Pause scrolling
  paused = 1;
}